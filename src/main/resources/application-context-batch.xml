<beans xmlns:batch="http://www.springframework.org/schema/batch" xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
           http://www.springframework.org/schema/beans 
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/batch 
           http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close">

        <property name="driverClass" value="org.postgresql.Driver" />
        <property name="jdbcUrl" value="" />
        <property name="user" value="" />
        <property name="password" value="" />

        <property name="initialPoolSize" value="3" />
        <property name="minPoolSize" value="3" />
        <property name="maxPoolSize" value="50" />
        <!-- <property name="timeout"><value>0</value></property> -->   <!-- 0 means: no timeout -->
        <property name="idleConnectionTestPeriod" value="200" />
        <property name="acquireIncrement" value="1" />
        <property name="maxStatements" value="0" />  <!-- 0 means: statement caching is turned off. -->
        <property name="numHelperThreads" value="3" />  <!-- 3 is default -->

    </bean>

    <bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
        <property name="jobRepository" ref="jobRepository" />
        <property name="taskExecutor">
            <bean class="org.springframework.core.task.SimpleAsyncTaskExecutor" />
        </property>
    </bean>

    <batch:job-repository id="jobRepository" data-source="dataSource" transaction-manager="transactionManager"
        isolation-level-for-create="DEFAULT" table-prefix="BATCH_" max-varchar-length="1000" />

    <batch:job id="dataRistoranteImporter">
        <batch:step id="step1">
            <batch:tasklet>
                <batch:chunk reader="dataRistoranteReader" processor="ristoranteProcessor" writer="ristoranteWriter"
                    commit-interval="1" />
            </batch:tasklet>
        </batch:step>
        <batch:listeners>
            <batch:listener>
                <bean class="it.av.youeat.batch.system.ItemFailureLoggerListener" />
            </batch:listener>
        </batch:listeners>
    </batch:job>

    <bean id="dataRistoranteReader" class="it.av.youeat.batch.system.DataRistoranteReader" />

    <bean id="ristoranteWriter" class="it.av.youeat.batch.system.RistoranteWriter" />

    <bean id="ristoranteProcessor" class="it.av.youeat.batch.system.RistoranteProcessor" />

    <bean id="jobDetail" class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="jobLauncherController" />
        <property name="targetMethod" value="run" />
        <property name="concurrent" value="false" />
    </bean>

    <!-- <bean id="simpleTrigger" class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="jobDetail" />
        <property name="startDelay" value="10000" />
        <property name="repeatInterval" value="50000" />
    </bean> -->
    
    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="cronExpression" value="0 0/12 * * * ?"/>
        <!-- 10 seconds -->
        <property name="startDelay" value="10000" />
    </bean>

    <bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
        <property name="triggers">
            <list>
                <ref bean="cronTrigger" />
            </list>
        </property>
    </bean>

    <bean id="jobLauncherController" class="it.av.youeat.batch.system.JobLauncherController" />

</beans>